{"version":3,"sources":["assets/menu.svg","ui/PolygonItem/PolygonItem.js","components/QuizAnswersList/QuizAnswersList.js","utils/getFormattedAmount.js","components/WinningAmountsList/WinningAmountsList.js","constants/screens.js","assets/close.svg","ui/Modal/Modal.js","screens/Game/Game.js","constants/answerStatuses.js","assets/rich-man.svg","ui/Button/Button.js","ui/LogoScreen/LogoScreen.js","screens/Greeting/Greeting.js","assets/hand.svg","screens/Home/Home.js","screens/Score/Score.js","App.js","index.js"],"names":["PolygonItem","props","className","onClick","onClickHandler","Function","prototype","polygonText","memo","QuizAnswersList","answerStatus","answersList","selectedQuestion","map","answerOption","answerIndex","isCorrect","answerText","getFormattedAmount","amount","currency","toString","replace","WinningAmountsList","currentScore","winnigAmounts","winningAmount","scoreIndex","GAME_SCREEN","Modal","children","onClose","open","ReactDOM","createPortal","src","CloseIcon","alt","document","getElementById","Game","history","useHistory","useState","currentQuestion","setCurrentQuestion","setCurrentScore","setSelectedQuestion","setAnswerStatus","isOpen","setIsOpen","data","setData","useEffect","fetch","headers","Accept","then","response","json","intervalActions","firstAction","secondAction","iterations","interval","setInterval","clearInterval","Object","keys","length","MenuIcon","quizConfig","questionText","answerOptions","isCorrectAnswer","index","nextQuestion","setCorrectStatus","push","handleCorrectAnswer","score","pathname","state","Button","LogoScreen","buttonText","hasBg","hasButton","logoSRC","redirectURL","subtitle","title","to","Title","Greeting","RichManLogo","Home","HandLogo","Score","location","useLocation","App","basename","process","path","exact","component","render"],"mappings":"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","file":"static/js/main.25aba05d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/menu.4cc3cba4.svg\";","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport './PolygonItem.css';\n\nconst PolygonItem = (props) => {\n\treturn (\n\t\t<li\n\t\t\tclassName={props.className}\n\t\t\tonClick={props.onClickHandler ? props.onClickHandler : Function.prototype}\n\t\t>\n\t\t\t<div className='hex'>\n\t\t\t\t<span>{props.polygonText}</span>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nPolygonItem.propTypes = {\n\tclassName: PropTypes.string.isRequired,\n\tonClickHandler: PropTypes.func,\n\tpolygonText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default memo(PolygonItem);\n","import './QuizAnswersList.css';\n\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PolygonItem from '../../ui/PolygonItem/PolygonItem';\n\nconst QuizAnswersList = ({\n\tanswerStatus,\n\tanswersList,\n\tselectedQuestion,\n\tonClick,\n}) => {\n\treturn (\n\t\t<ul className='quiz-answers'>\n\t\t\t{answersList.map((answerOption, answerIndex) => {\n\t\t\t\treturn (\n\t\t\t\t\t<PolygonItem\n\t\t\t\t\t\tkey={answerOption.answerText}\n\t\t\t\t\t\tclassName={`polygon-item polygon-item-answer ${\n\t\t\t\t\t\t\tselectedQuestion === answerIndex ? answerStatus : ''\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tonClickHandler={() => onClick(answerOption.isCorrect, answerIndex)}\n\t\t\t\t\t\tpolygonText={answerOption.answerText}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t);\n};\n\nQuizAnswersList.propTypes = {\n\tanswerStatus: PropTypes.string,\n\tanswersList: PropTypes.array,\n\tselectedQuestion: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.oneOf([null]),\n\t]),\n\tonClick: PropTypes.func.isRequired,\n};\n\nexport default memo(QuizAnswersList);\n","export const getFormattedAmount = (amount, currency) => {\n\tconst formattedAmount = amount\n\t\t.toString()\n\t\t.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n\treturn currency + formattedAmount;\n};\n","import './WinningAmountsList.css';\n\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PolygonItem from '../../ui/PolygonItem/PolygonItem';\nimport { getFormattedAmount } from '../../utils/getFormattedAmount';\n\nconst WinningAmountsList = ({ currency, currentScore, winnigAmounts }) => {\n\treturn (\n\t\t<ul className='winning-amounts'>\n\t\t\t{winnigAmounts.map((winningAmount, scoreIndex) => {\n\t\t\t\treturn (\n\t\t\t\t\t<PolygonItem\n\t\t\t\t\t\tkey={winningAmount}\n\t\t\t\t\t\tclassName={`polygon-item polygon-item-amount\n\t\t\t\t\t\t\t\t\t${currentScore === scoreIndex ? 'winned' : ''}\n\t\t\t\t\t\t\t\t\t${currentScore && currentScore < scoreIndex ? 'prev-winned' : ''}\n\t\t\t\t\t\t`}\n\t\t\t\t\t\tpolygonText={getFormattedAmount(winningAmount, currency)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t);\n};\n\nWinningAmountsList.propTypes = {\n\tcurrency: PropTypes.string.isRequired,\n\tcurrentScore: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.oneOf([null]),\n\t]),\n\twinnigAmounts: PropTypes.array,\n};\n\nexport default memo(WinningAmountsList);\n","export const SCORE_SCREEN = '/score';\nexport const GAME_SCREEN = '/game';\n","export default __webpack_public_path__ + \"static/media/close.f1510c4e.svg\";","import './Modal.css';\n\nimport { memo } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport CloseIcon from './../../assets/close.svg';\n\nconst Modal = ({ children, onClose, open }) => {\n\tif (!open) {\n\t\treturn null;\n\t}\n\treturn ReactDOM.createPortal(\n\t\t<>\n\t\t\t<div className='modal-container'>\n\t\t\t\t<div className='header-with-close'>\n\t\t\t\t\t<div onClick={onClose} className='close-container'>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName='mobile-logo-close'\n\t\t\t\t\t\t\tsrc={CloseIcon}\n\t\t\t\t\t\t\talt='menu logo'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</>,\n\t\tdocument.getElementById('portal')\n\t);\n};\n\nModal.propTypes = {\n\tchildren: PropTypes.node,\n\tonClose: PropTypes.func.isRequired,\n\topen: PropTypes.bool.isRequired,\n};\n\nexport default memo(Modal);\n","import './Game.css';\n\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport MenuIcon from '../../assets/menu.svg';\nimport QuizAnswersList from '../../components/QuizAnswersList/QuizAnswersList';\nimport WinningAmountsList from '../../components/WinningAmountsList/WinningAmountsList';\nimport { SCORE_SCREEN } from '../../constants/screens';\nimport Modal from '../../ui/Modal/Modal';\nimport { getFormattedAmount } from '../../utils/getFormattedAmount';\nimport {\n\tCORRECT_ANSWER,\n\tSELECTED_ANSWER,\n\tWRONG_ANSWER,\n} from '../../constants/answerStatuses';\n\nconst Game = () => {\n\tconst history = useHistory();\n\tconst currency = '$';\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [currentScore, setCurrentScore] = useState(null);\n\tconst [selectedQuestion, setSelectedQuestion] = useState(null);\n\tconst [answerStatus, setAnswerStatus] = useState('');\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tconst [data, setData] = useState({});\n\tconst getData = () => {\n\t\tfetch('config.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((json) => setData(json));\n\t};\n\n\tuseEffect(() => {\n\t\tgetData();\n\t}, []);\n\n\tconst setCorrectStatus = (nextQuestion) => {\n\t\tsetAnswerStatus(CORRECT_ANSWER);\n\t\tsetCurrentScore(data.winnigAmounts?.length - nextQuestion);\n\t};\n\n\tconst handleCorrectAnswer = (nextQuestion) => {\n\t\tsetSelectedQuestion(null);\n\t\tif (nextQuestion < data.quizConfig?.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\thistory.push('greeting');\n\t\t}\n\t};\n\n\tconst intervalActions = (firstAction, secondAction) => {\n\t\tlet iterations = 0;\n\t\tlet interval = setInterval(() => {\n\t\t\titerations++;\n\t\t\tif (iterations === 1) {\n\t\t\t\tfirstAction();\n\t\t\t}\n\t\t\tif (iterations === 2) {\n\t\t\t\tsecondAction();\n\t\t\t}\n\t\t\tif (iterations >= 2) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 1000);\n\t};\n\n\tconst handleAnswerButtonClick = (isCorrectAnswer, index) => {\n\t\tsetSelectedQuestion(index);\n\t\tsetAnswerStatus(SELECTED_ANSWER);\n\n\t\tif (isCorrectAnswer) {\n\t\t\tconst nextQuestion = currentQuestion + 1;\n\t\t\tintervalActions(\n\t\t\t\t() => setCorrectStatus(nextQuestion),\n\t\t\t\t() => handleCorrectAnswer(nextQuestion)\n\t\t\t);\n\t\t} else {\n\t\t\tlet score = getFormattedAmount(\n\t\t\t\tcurrentScore ? data.winnigAmounts[currentScore] : 0,\n\t\t\t\tcurrency\n\t\t\t);\n\t\t\tintervalActions(\n\t\t\t\t() => setAnswerStatus(WRONG_ANSWER),\n\t\t\t\t() => history.push({ pathname: SCORE_SCREEN, state: score })\n\t\t\t);\n\t\t}\n\t};\n\n\tif (Object.keys(data).length === 0) {\n\t\treturn (\n\t\t\t<div className='game-container loading'>\n\t\t\t\t<div className='loading-spinner'></div>\n\t\t\t\t<div className='loading-description'>Game is launching...</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className='game-container'>\n\t\t\t<div className='quiz-area'>\n\t\t\t\t<div className='mobile-menu' onClick={() => setIsOpen(true)}>\n\t\t\t\t\t<img className='mobile-logo-menu' src={MenuIcon} alt='menu logo' />\n\t\t\t\t</div>\n\t\t\t\t<div className='quiz-question'>\n\t\t\t\t\t<p>{data.quizConfig[currentQuestion].questionText}</p>\n\t\t\t\t</div>\n\t\t\t\t<QuizAnswersList\n\t\t\t\t\tanswersList={data.quizConfig[currentQuestion].answerOptions}\n\t\t\t\t\tselectedQuestion={selectedQuestion}\n\t\t\t\t\tanswerStatus={answerStatus}\n\t\t\t\t\tonClick={handleAnswerButtonClick}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='progress-area'>\n\t\t\t\t<WinningAmountsList\n\t\t\t\t\twinnigAmounts={data.winnigAmounts}\n\t\t\t\t\tcurrency={currency}\n\t\t\t\t\tcurrentScore={currentScore}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<Modal open={isOpen} onClose={() => setIsOpen(false)}>\n\t\t\t\t<WinningAmountsList\n\t\t\t\t\twinnigAmounts={data.winnigAmounts}\n\t\t\t\t\tcurrency={currency}\n\t\t\t\t\tcurrentScore={currentScore}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\n\nexport default Game;\n","export const CORRECT_ANSWER = 'correct';\nexport const SELECTED_ANSWER = 'selected';\nexport const WRONG_ANSWER = 'wrong';\n","export default __webpack_public_path__ + \"static/media/rich-man.427706fe.svg\";","import './Button.css';\n\nimport PropTypes from 'prop-types';\n\nconst Button = (props) => {\n\treturn <button className='action-button'>{props.children}</button>;\n};\n\nButton.propTypes = {\n\tchildren: PropTypes.node,\n};\n\nexport default Button;\n","import './LogoScreen.css';\n\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../ui/Button/Button';\n\nconst LogoScreen = (props) => {\n\tconst {\n\t\tbuttonText,\n\t\thasBg = false,\n\t\thasButton = false,\n\t\tlogoSRC,\n\t\tredirectURL,\n\t\tsubtitle,\n\t\ttitle,\n\t} = props;\n\treturn (\n\t\t<div className={`logo-screen-container ${hasBg ? 'with-bg' : ''}`}>\n\t\t\t<div className='logo-container'>\n\t\t\t\t<img className='logo-screen-logo' src={logoSRC} alt='screen logo' />\n\t\t\t</div>\n\t\t\t<div className='content-column'>\n\t\t\t\t{subtitle && <p className='logo-screen-subtitle'>{props?.subtitle}</p>}\n\t\t\t\t<p className='logo-screen-title'>{title}</p>\n\t\t\t\t{hasButton && (\n\t\t\t\t\t<Button>\n\t\t\t\t\t\t<Link to={redirectURL}>{buttonText}</Link>\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{hasButton && (\n\t\t\t\t<div className='mobile-column'>\n\t\t\t\t\t<Button>\n\t\t\t\t\t\t<Link to={redirectURL}>{buttonText}</Link>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nLogoScreen.propTypes = {\n\tbuttonText: PropTypes.string,\n\thasBg: PropTypes.bool,\n\thasButton: PropTypes.bool,\n\tlogoSRC: PropTypes.string.isRequired,\n\tredirectURL: PropTypes.string,\n\tsubtitle: PropTypes.string,\n\ttitle: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n};\n\nexport default memo(LogoScreen);\n","import RichManLogo from '../../assets/rich-man.svg';\nimport LogoScreen from '../../ui/LogoScreen/LogoScreen';\n\nconst Title = () => {\n\treturn (\n\t\t<>\n\t\t\tWelcome to the ranks\n\t\t\t<br />\n\t\t\tof <span className='text-uppercase'>rich people</span>,<br />\n\t\t\tnew millionaire!!!\n\t\t</>\n\t);\n};\n\nconst Greeting = () => {\n\treturn <LogoScreen logoSRC={RichManLogo} title={<Title />} />;\n};\n\nexport default Greeting;\n","export default __webpack_public_path__ + \"static/media/hand.ae778be2.svg\";","import HandLogo from '../../assets/hand.svg';\nimport { GAME_SCREEN } from '../../constants/screens';\nimport LogoScreen from '../../ui/LogoScreen/LogoScreen';\n\nconst Title = () => {\n\treturn (\n\t\t<>\n\t\t\tWho wants to be\n\t\t\t<br /> a millionaire?\n\t\t</>\n\t);\n};\n\nconst Home = () => {\n\treturn (\n\t\t<LogoScreen\n\t\t\tlogoSRC={HandLogo}\n\t\t\ttitle={<Title />}\n\t\t\tredirectURL={GAME_SCREEN}\n\t\t\tbuttonText={'Start'}\n\t\t\thasButton\n\t\t\thasBg\n\t\t/>\n\t);\n};\n\nexport default Home;\n","import { useLocation } from 'react-router-dom';\n\nimport HandLogo from '../../assets/hand.svg';\nimport { GAME_SCREEN } from '../../constants/screens';\nimport LogoScreen from '../../ui/LogoScreen/LogoScreen';\n\nconst Score = () => {\n\tconst location = useLocation();\n\treturn (\n\t\t<LogoScreen\n\t\t\tlogoSRC={HandLogo}\n\t\t\ttitle={`${location?.state} earned`}\n\t\t\tsubtitle={'Total score:'}\n\t\t\tredirectURL={GAME_SCREEN}\n\t\t\tbuttonText={'Try again'}\n\t\t\thasButton\n\t\t/>\n\t);\n};\n\nexport default Score;\n","import { HashRouter, Route } from 'react-router-dom';\n\nimport Game from './screens/Game/Game';\nimport Greeting from './screens/Greeting/Greeting';\nimport Home from './screens/Home/Home';\nimport Score from './screens/Score/Score';\n\nfunction App() {\n\treturn (\n\t\t<HashRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<Route path='/' exact component={Home} />\n\t\t\t<Route path='/game' exact component={Game} />\n\t\t\t<Route path='/score' exact component={Score} />\n\t\t\t<Route path='/greeting' exact component={Greeting} />\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","import './index.css';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}